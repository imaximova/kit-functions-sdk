import { AxiosInstance } from 'axios';
import { CallObject, ContextObject, MessageObject, QueueInfo, SkillObject } from "./types";
declare class VoximplantKit {
    private isTest;
    private requestData;
    private responseData;
    private accessToken;
    private sessionAccessUrl;
    private apiUrl;
    private domain;
    private functionId;
    eventType: string;
    call: CallObject;
    variables: object;
    headers: object;
    skills: Array<SkillObject>;
    private priority;
    incomingMessage: MessageObject;
    replyMessage: MessageObject;
    private conversationDB;
    private functionDB;
    private accountDB;
    private db;
    api: any;
    http: AxiosInstance;
    constructor(context: ContextObject, isTest?: boolean);
    static default: typeof VoximplantKit;
    loadDatabases(): Promise<void>;
    setPriority(value: number): number;
    getPriority(): number;
    getResponseBody(data: any): any;
    getIncomingMessage(): MessageObject;
    setAccessToken(token: any): void;
    getVariable(name: string): any;
    setVariable(name: any, value: any): void;
    getCallData(): any;
    getVariables(): any;
    getSkills(): any;
    setSkill(name: string, level: number): void;
    removeSkill(name: string): void;
    finishRequest(): boolean;
    cancelFinishRequest(): boolean;
    transferToQueue(queue: QueueInfo): boolean;
    cancelTransferToQueue(): boolean;
    private loadDB;
    private saveDB;
    private saveDb;
    dbGet(key: string, scope?: string): any;
    dbSet(key: string, value: any, scope?: string): void;
    dbGetAll(scope?: string): any;
    dbCommit(): Promise<void>;
    sendSMS(from: string, to: string, message: string): any;
    apiProxy(url: string, data: any): any;
    addPhoto(url: any): boolean;
    version(): string;
}
export = VoximplantKit;
