[{"fqdn":"references.kit_functions.voximplantkit","kind":"class","title":"VoximplantKit","description":"","children":[{"fqdn":"references.kit_functions.voximplantkit.constructor","kind":"constructor","title":"constructor","description":"The class VoximplantKit is a middleware for working with functions\n```js\nmodule.exports = async function(context, callback) {\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Some code\n console.log(Date.now());\n // End of function work\n callback(200, kit.getResponseBody());\n}\n```","params":[{"fqdn":"references.kit_functions.voximplantkit.constructor.context","title":"context","description":"","optional":false,"types":["ContextObject"]}]},{"fqdn":"references.kit_functions.voximplantkit.apiproxy","kind":"method","title":"apiProxy","description":"Voximplant Kit API proxy\n```js\n// Example of getting an account name\n const kit = new VoximplantKit(context);\n try {\n    const { success, result } = await kit.apiProxy('/v2/account/getAccountInfo');\n    if (success) {\n       console.log('Account name', result.domain.name);\n    }\n } catch (err) {\n    console.log(err);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["Promise<unknown>"],"params":[{"fqdn":"references.kit_functions.voximplantkit.apiproxy.url","title":"url","description":"Url address","optional":false,"types":["string"]},{"fqdn":"references.kit_functions.voximplantkit.apiproxy.data","title":"data","description":"","optional":false,"types":["any"]}]},{"fqdn":"references.kit_functions.voximplantkit.cancelfinishrequest","kind":"method","title":"cancelFinishRequest","description":"Cancel finish current request in conversation\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (this.isMessage()) {\n   kit.finishRequest();\n }\n // ...\n // Some condition for cancellation finishRequest\n const shouldCancel = true;\n if (shouldCancel) {\n   kit.cancelFinishRequest();\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"]},{"fqdn":"references.kit_functions.voximplantkit.canceltransfertoqueue","kind":"method","title":"cancelTransferToQueue","description":"Cancel transfer to queue\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Transfer to queue by name some_queue_name\n kit.transferToQueue({queue_id: null, queue_name: 'some_queue_name'});\n //...\n // Some condition for cancellation transfer to queue\n const shouldCancel = true;\n if (shouldCancel) {\n   kit.cancelTransferToQueue();\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"]},{"fqdn":"references.kit_functions.voximplantkit.dbcommit","kind":"method","title":"dbCommit","description":"Commit DB changes\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n try {\n   // Connecting the internal database\n   await kit.loadDatabases();\n   // Get the value from the function scope by the test_key key\n   const _test = kit.dbGet('test_key', 'function')\n   // If there is no data, then we write it down\n   if (_test === null) {\n     kit.dbSet('test_key', 'Hello world!!!', 'function');\n   }\n   // Writing changes to the database\n   kit.dbCommit()\n } catch(err) {\n   console.log(err);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["Promise<boolean>"]},{"fqdn":"references.kit_functions.voximplantkit.dbget","kind":"method","title":"dbGet","description":"Get value from DB by key\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n try {\n   // Connecting the internal database\n   await kit.loadDatabases();\n   // Get the value from the function scope by the test_key key\n   const _test = kit.dbGet('test_key', 'function')\n   console.log(_test);\n } catch(err) {\n   console.log(err);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["string","null"],"params":[{"fqdn":"references.kit_functions.voximplantkit.dbget.key","title":"key","description":"","optional":false,"types":["string"]},{"fqdn":"references.kit_functions.voximplantkit.dbget.scope","title":"scope","description":"","optional":false,"types":["[DataBaseType](/kit/docs/references/kit_functions/databasetype)"],"defaultValue":"\"global\""}]},{"fqdn":"references.kit_functions.voximplantkit.dbgetall","kind":"method","title":"dbGetAll","description":"Get all DB scope by name\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n try {\n   // Connecting the internal database\n   await kit.loadDatabases();\n   // Reading contents from global scope\n   const global_scope = kit.dbGetAll('global');\n   console.log(global_scope)\n } catch(err) {\n   console.log(err);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["[ObjectType](/kit/docs/references/kit_functions/objecttype)","null"],"params":[{"fqdn":"references.kit_functions.voximplantkit.dbgetall.scope","title":"scope","description":"","optional":false,"types":["[DataBaseType](/kit/docs/references/kit_functions/databasetype)"],"defaultValue":"\"global\""}]},{"fqdn":"references.kit_functions.voximplantkit.dbset","kind":"method","title":"dbSet","description":"Set value in DB by key\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n try {\n   // Connecting the internal database\n   await kit.loadDatabases();\n   // Get the value from the function scope by the test_key key\n   const _test = kit.dbGet('test_key', 'function')\n   // If there is no data, then we write it down\n   if (_test === null) {\n     kit.dbSet('test_key', 'Hello world!!!', 'function');\n   }\n   // Writing changes to the database\n   kit.dbCommit()\n } catch(err) {\n   console.log(err);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.dbset.key","title":"key","description":"","optional":false,"types":["string"]},{"fqdn":"references.kit_functions.voximplantkit.dbset.value","title":"value","description":"","optional":false,"types":["any"]},{"fqdn":"references.kit_functions.voximplantkit.dbset.scope","title":"scope","description":"","optional":false,"types":["[DataBaseType](/kit/docs/references/kit_functions/databasetype)"],"defaultValue":"\"global\""}]},{"fqdn":"references.kit_functions.voximplantkit.deletevariable","kind":"method","title":"deleteVariable","description":"Delete variable\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n kit.deleteVariable('my_var');\n // The console will write null\n console.log(kit.getVariable('my_var'));\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["void"],"params":[{"fqdn":"references.kit_functions.voximplantkit.deletevariable.name","title":"name","description":"Variable name","optional":false,"types":["string"]}]},{"fqdn":"references.kit_functions.voximplantkit.finishrequest","kind":"method","title":"finishRequest","description":"Finish current request in conversation\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (this.isMessage()) {\n   kit.finishRequest();\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"]},{"fqdn":"references.kit_functions.voximplantkit.getcalldata","kind":"method","title":"getCallData","description":"Get all call data\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (kit.isCall()) {\n   const call = kit.getCallData();\n   // Get the phone from which the call was made\n   console.log(call.phone_a);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["[CallObject](/kit/docs/references/kit_functions/callobject)","null"]},{"fqdn":"references.kit_functions.voximplantkit.getcallheaders","kind":"method","title":"getCallHeaders","description":"Get call headers\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (kit.isCall()) {\n   const headers = kit.getCallHeaders();\n   console.log(headers);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["[ObjectType](/kit/docs/references/kit_functions/objecttype)","null"]},{"fqdn":"references.kit_functions.voximplantkit.getincomingmessage","kind":"method","title":"getIncomingMessage","description":"Get incoming message (Read only)\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Checking that the function is called from a channel\n if (kit.isMessage()) {\n   // Getting text from an incoming message\n   const message = kit.getIncomingMessage();\n   console.log(message.text);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["[MessageObject](/kit/docs/references/kit_functions/messageobject)","null"]},{"fqdn":"references.kit_functions.voximplantkit.getpriority","kind":"method","title":"getPriority","description":"Get call priority\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Returns a number from 0 to 10\n const priority = kit.getPriority();\n if (priority === 10) {\n   // Something to do\n } else if (priority === 5) {\n   // Something to do\n } else {\n   // Something to do\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["number"]},{"fqdn":"references.kit_functions.voximplantkit.getresponsebody","kind":"method","title":"getResponseBody","description":"Get function response\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["any"],"params":[{"fqdn":"references.kit_functions.voximplantkit.getresponsebody.data","title":"data","description":"","optional":false,"types":["any"]}]},{"fqdn":"references.kit_functions.voximplantkit.getskills","kind":"method","title":"getSkills","description":"Get all skills\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (this.isCall()) {\n   const all_skills = kit.getSkills();\n   console.log('All skills:', all_skills);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["[SkillObject](/kit/docs/references/kit_functions/skillobject)[]"]},{"fqdn":"references.kit_functions.voximplantkit.getvariable","kind":"method","title":"getVariable","description":"Get Variable\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n const my_var = kit.getVariable('my_var');\n if (my_var) {\n   console.log(my_var);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["string","null"],"params":[{"fqdn":"references.kit_functions.voximplantkit.getvariable.name","title":"name","description":"","optional":false,"types":["string"]}]},{"fqdn":"references.kit_functions.voximplantkit.getvariables","kind":"method","title":"getVariables","description":"Get all variables\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n const all_vars = kit.getVariables();\n console.log(all_vars);\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["[ObjectType](/kit/docs/references/kit_functions/objecttype)"]},{"fqdn":"references.kit_functions.voximplantkit.iscall","kind":"method","title":"isCall","description":"The function was called from a call\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (kit.isCall()) {\n   console.log('This function is called from the call')\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"]},{"fqdn":"references.kit_functions.voximplantkit.ismessage","kind":"method","title":"isMessage","description":"The function was called from a message\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (kit.isMessage()) {\n   console.log('This function is called from the channel');\n   const message = kit.getIncomingMessage();\n   //...\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"]},{"fqdn":"references.kit_functions.voximplantkit.loaddatabases","kind":"method","title":"loadDatabases","description":"load Databases\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n try {\n   // Connecting the internal database\n   await kit.loadDatabases();\n   // Reading contents from global scope\n   const global_scope = kit.dbGetAll('global');\n   console.log(global_scope)\n } catch(err) {\n   console.log(err);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["Promise<void>"]},{"fqdn":"references.kit_functions.voximplantkit.removeskill","kind":"method","title":"removeSkill","description":"Remove skill\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (this.isCall()) {\n   kit.removeSkill('some_skill_name');\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.removeskill.name","title":"name","description":"","optional":false,"types":["string"]}]},{"fqdn":"references.kit_functions.voximplantkit.setpriority","kind":"method","title":"setPriority","description":"Set the priority of the call. The higher the priority, the less time the client will wait for the operator's answer.\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Transfer to queue by name some_queue_name\n kit.transferToQueue({queue_id: null, queue_name: 'some_queue_name'});\n // Set the maximum priority\n kit.setPriority(10);\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.setpriority.value","title":"value","description":"","optional":false,"types":["number"]}]},{"fqdn":"references.kit_functions.voximplantkit.setreplymessagetext","kind":"method","title":"setReplyMessageText","description":"Set the response text to an incoming message\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Checking that the function is called from a channel\n if (kit.isMessage()) {\n   // Getting text from an incoming message\n   const message = kit.getIncomingMessage();\n   console.log(message.text);\n   // Set the response text\n   kit.setReplyMessageText('you wrote ' + message.text);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.setreplymessagetext.text","title":"text","description":"","optional":false,"types":["string"]}]},{"fqdn":"references.kit_functions.voximplantkit.setskill","kind":"method","title":"setSkill","description":"Set skill\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n if (this.isCall()) {\n   kit.setSkill('some_skill_name', 5);\n }\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.setskill.name","title":"name","description":"","optional":false,"types":["string"]},{"fqdn":"references.kit_functions.voximplantkit.setskill.level","title":"level","description":"","optional":false,"types":["number"]}]},{"fqdn":"references.kit_functions.voximplantkit.setvariable","kind":"method","title":"setVariable","description":"Set variable\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n kit.setVariable('my_var', 'some_value');\n console.log(kit.getVariable('my_var'));\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.setvariable.name","title":"name","description":"Variable name","optional":false,"types":["string"]},{"fqdn":"references.kit_functions.voximplantkit.setvariable.value","title":"value","description":"Variable value","optional":false,"types":["string"]}]},{"fqdn":"references.kit_functions.voximplantkit.transfertoqueue","kind":"method","title":"transferToQueue","description":"Transfer to queue\n```js\n // Initializing a VoximplantKit instance\n const kit = new VoximplantKit(context);\n // Transfer to queue by name some_queue_name\n kit.transferToQueue({queue_id: null, queue_name: 'some_queue_name'});\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["boolean"],"params":[{"fqdn":"references.kit_functions.voximplantkit.transfertoqueue.queue","title":"queue","description":"","optional":false,"types":["[QueueInfo](/kit/docs/references/kit_functions/queueinfo)"]}]},{"fqdn":"references.kit_functions.voximplantkit.version","kind":"method","title":"version","description":"Get client version\n```js\n const kit = new VoximplantKit(context);\n // Get client version\n kit.version();\n // End of function work\n callback(200, kit.getResponseBody());\n```","returns":["string"]}]},{"fqdn":"references.kit_functions.callobject","kind":"interface","title":"CallObject","description":"","children":[{"fqdn":"references.kit_functions.callobject.attempt_num","kind":"prop","title":"attempt_num","description":"","types":["number"]},{"fqdn":"references.kit_functions.callobject.callerid","kind":"prop","title":"callerid","description":"","types":["string"]},{"fqdn":"references.kit_functions.callobject.destination","kind":"prop","title":"destination","description":"","types":["string"]},{"fqdn":"references.kit_functions.callobject.display_name","kind":"prop","title":"display_name","description":"","types":["string"]},{"fqdn":"references.kit_functions.callobject.id","kind":"prop","title":"id","description":"","types":["number"]},{"fqdn":"references.kit_functions.callobject.phone_a","kind":"prop","title":"phone_a","description":"","types":["string"]},{"fqdn":"references.kit_functions.callobject.phone_b","kind":"prop","title":"phone_b","description":"","types":["string"]},{"fqdn":"references.kit_functions.callobject.record_url","kind":"prop","title":"record_url","description":"","types":["string"]},{"fqdn":"references.kit_functions.callobject.session_id","kind":"prop","title":"session_id","description":"","types":["string"]}]},{"fqdn":"references.kit_functions.conversationcustomdataclientdataobject","kind":"interface","title":"ConversationCustomDataClientDataObject","description":"","children":[{"fqdn":"references.kit_functions.conversationcustomdataclientdataobject.client_avatar","kind":"prop","title":"client_avatar","description":"","types":["string"]},{"fqdn":"references.kit_functions.conversationcustomdataclientdataobject.client_display_name","kind":"prop","title":"client_display_name","description":"","types":["string"]},{"fqdn":"references.kit_functions.conversationcustomdataclientdataobject.client_id","kind":"prop","title":"client_id","description":"","types":["string"]},{"fqdn":"references.kit_functions.conversationcustomdataclientdataobject.client_phone","kind":"prop","title":"client_phone","description":"","types":["string"]}]},{"fqdn":"references.kit_functions.conversationcustomdataconversationdataobject","kind":"interface","title":"ConversationCustomDataConversationDataObject","description":"","children":[{"fqdn":"references.kit_functions.conversationcustomdataconversationdataobject.channel_type","kind":"prop","title":"channel_type","description":"","types":["string"]},{"fqdn":"references.kit_functions.conversationcustomdataconversationdataobject.is_read","kind":"prop","title":"is_read","description":"","types":["boolean"]},{"fqdn":"references.kit_functions.conversationcustomdataconversationdataobject.last_message_sender_type","kind":"prop","title":"last_message_sender_type","description":"","types":["string"]},{"fqdn":"references.kit_functions.conversationcustomdataconversationdataobject.last_message_text","kind":"prop","title":"last_message_text","description":"","types":["string"]},{"fqdn":"references.kit_functions.conversationcustomdataconversationdataobject.last_message_time","kind":"prop","title":"last_message_time","description":"","types":["number"]}]},{"fqdn":"references.kit_functions.conversationcustomdataobject","kind":"interface","title":"ConversationCustomDataObject","description":"","children":[{"fqdn":"references.kit_functions.conversationcustomdataobject.client_data","kind":"prop","title":"client_data","description":"","types":["[ConversationCustomDataClientDataObject](/kit/docs/references/kit_functions/conversationcustomdataclientdataobject)"]},{"fqdn":"references.kit_functions.conversationcustomdataobject.conversation_data","kind":"prop","title":"conversation_data","description":"","types":["[ConversationCustomDataConversationDataObject](/kit/docs/references/kit_functions/conversationcustomdataconversationdataobject)"]},{"fqdn":"references.kit_functions.conversationcustomdataobject.customer_data","kind":"prop","title":"customer_data","description":"","types":["{id: number}"],"optional":true},{"fqdn":"references.kit_functions.conversationcustomdataobject.request_data","kind":"prop","title":"request_data","description":"","types":["[ConversationCustomDataRequestData](/kit/docs/references/kit_functions/conversationcustomdatarequestdata)"]}]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata","kind":"interface","title":"ConversationCustomDataRequestData","description":"","children":[{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.completed","kind":"prop","title":"completed","description":"","types":["boolean"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.conversation_id","kind":"prop","title":"conversation_id","description":"","types":["number"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.end_sequence","kind":"prop","title":"end_sequence","description":"","types":["any"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.end_time","kind":"prop","title":"end_time","description":"","types":["number"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.handling_start_time","kind":"prop","title":"handling_start_time","description":"","types":["number"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.id","kind":"prop","title":"id","description":"","types":["number"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.start_sequence","kind":"prop","title":"start_sequence","description":"","types":["number"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.start_time","kind":"prop","title":"start_time","description":"","types":["number"]},{"fqdn":"references.kit_functions.conversationcustomdatarequestdata.variables","kind":"prop","title":"variables","description":"","types":["[ObjectType](/kit/docs/references/kit_functions/objecttype)"]}]},{"fqdn":"references.kit_functions.database","kind":"interface","title":"DataBase","description":"","children":[{"fqdn":"references.kit_functions.database.conversation","kind":"prop","title":"conversation","description":"","types":["[ObjectType](/kit/docs/references/kit_functions/objecttype)"]},{"fqdn":"references.kit_functions.database.function","kind":"prop","title":"function","description":"","types":["[ObjectType](/kit/docs/references/kit_functions/objecttype)"]},{"fqdn":"references.kit_functions.database.global","kind":"prop","title":"global","description":"","types":["[ObjectType](/kit/docs/references/kit_functions/objecttype)"]}]},{"fqdn":"references.kit_functions.incomingrequestobject","kind":"interface","title":"IncomingRequestObject","description":"","children":[{"fqdn":"references.kit_functions.incomingrequestobject.completed","kind":"prop","title":"completed","description":"","types":["boolean"]},{"fqdn":"references.kit_functions.incomingrequestobject.conversation_id","kind":"prop","title":"conversation_id","description":"","types":["number"]},{"fqdn":"references.kit_functions.incomingrequestobject.end_time","kind":"prop","title":"end_time","description":"","types":["number"]},{"fqdn":"references.kit_functions.incomingrequestobject.handling_start_time","kind":"prop","title":"handling_start_time","description":"","types":["number"]},{"fqdn":"references.kit_functions.incomingrequestobject.id","kind":"prop","title":"id","description":"","types":["number"]},{"fqdn":"references.kit_functions.incomingrequestobject.start_time","kind":"prop","title":"start_time","description":"","types":["number"]}]},{"fqdn":"references.kit_functions.messageconversation","kind":"interface","title":"MessageConversation","description":"","children":[{"fqdn":"references.kit_functions.messageconversation.channel","kind":"prop","title":"channel","description":"","types":["[MessageConversationChannel](/kit/docs/references/kit_functions/messageconversationchannel)"]},{"fqdn":"references.kit_functions.messageconversation.client_id","kind":"prop","title":"client_id","description":"","types":["string"]},{"fqdn":"references.kit_functions.messageconversation.current_request","kind":"prop","title":"current_request","description":"","types":["[IncomingRequestObject](/kit/docs/references/kit_functions/incomingrequestobject)"]},{"fqdn":"references.kit_functions.messageconversation.current_status","kind":"prop","title":"current_status","description":"","types":["string"]},{"fqdn":"references.kit_functions.messageconversation.custom_data","kind":"prop","title":"custom_data","description":"","types":["[ConversationCustomDataObject](/kit/docs/references/kit_functions/conversationcustomdataobject)"]},{"fqdn":"references.kit_functions.messageconversation.id","kind":"prop","title":"id","description":"","types":["number"]}]},{"fqdn":"references.kit_functions.messageconversationchannel","kind":"interface","title":"MessageConversationChannel","description":"","children":[{"fqdn":"references.kit_functions.messageconversationchannel.access_token","kind":"prop","title":"access_token","description":"","types":["string"]},{"fqdn":"references.kit_functions.messageconversationchannel.account","kind":"prop","title":"account","description":"","types":["object"]},{"fqdn":"references.kit_functions.messageconversationchannel.channel_settings","kind":"prop","title":"channel_settings","description":"","types":["object"]},{"fqdn":"references.kit_functions.messageconversationchannel.channel_type","kind":"prop","title":"channel_type","description":"","types":["[ChannelType](/kit/docs/references/kit_functions/channeltype)"]},{"fqdn":"references.kit_functions.messageconversationchannel.channel_uuid","kind":"prop","title":"channel_uuid","description":"","types":["string"]},{"fqdn":"references.kit_functions.messageconversationchannel.id","kind":"prop","title":"id","description":"","types":["number"]},{"fqdn":"references.kit_functions.messageconversationchannel.partner_id","kind":"prop","title":"partner_id","description":"","types":["number"]},{"fqdn":"references.kit_functions.messageconversationchannel.processing_function","kind":"prop","title":"processing_function","description":"","types":["number"]},{"fqdn":"references.kit_functions.messageconversationchannel.processing_method","kind":"prop","title":"processing_method","description":"","types":["string"]},{"fqdn":"references.kit_functions.messageconversationchannel.processing_queue","kind":"prop","title":"processing_queue","description":"","types":["object"]}]},{"fqdn":"references.kit_functions.messagecustomer","kind":"interface","title":"MessageCustomer","description":"","children":[{"fqdn":"references.kit_functions.messagecustomer.customer_client_ids","kind":"prop","title":"customer_client_ids","description":"","types":["[MessageCustomerClientIds](/kit/docs/references/kit_functions/messagecustomerclientids)[]"]},{"fqdn":"references.kit_functions.messagecustomer.customer_details","kind":"prop","title":"customer_details","description":"","types":["string"]},{"fqdn":"references.kit_functions.messagecustomer.customer_display_name","kind":"prop","title":"customer_display_name","description":"","types":["string"]},{"fqdn":"references.kit_functions.messagecustomer.customer_emails","kind":"prop","title":"customer_emails","description":"","types":["string[]"]},{"fqdn":"references.kit_functions.messagecustomer.customer_external_id","kind":"prop","title":"customer_external_id","description":"","types":["string"]},{"fqdn":"references.kit_functions.messagecustomer.customer_phones","kind":"prop","title":"customer_phones","description":"","types":["string[]"]},{"fqdn":"references.kit_functions.messagecustomer.customer_photo","kind":"prop","title":"customer_photo","description":"","types":["string"]},{"fqdn":"references.kit_functions.messagecustomer.id","kind":"prop","title":"id","description":"","types":["number"]}]},{"fqdn":"references.kit_functions.messagecustomerclientids","kind":"interface","title":"MessageCustomerClientIds","description":"","children":[{"fqdn":"references.kit_functions.messagecustomerclientids.client_id","kind":"prop","title":"client_id","description":"","types":["string"]},{"fqdn":"references.kit_functions.messagecustomerclientids.client_type","kind":"prop","title":"client_type","description":"","types":["string"]}]},{"fqdn":"references.kit_functions.messageobject","kind":"interface","title":"MessageObject","description":"","children":[{"fqdn":"references.kit_functions.messageobject.conversation","kind":"prop","title":"conversation","description":"","types":["[MessageConversation](/kit/docs/references/kit_functions/messageconversation)"]},{"fqdn":"references.kit_functions.messageobject.customer","kind":"prop","title":"customer","description":"","types":["[MessageCustomer](/kit/docs/references/kit_functions/messagecustomer)"]},{"fqdn":"references.kit_functions.messageobject.id","kind":"prop","title":"id","description":"","types":["number"]},{"fqdn":"references.kit_functions.messageobject.sender","kind":"prop","title":"sender","description":"","types":["[MessageSender](/kit/docs/references/kit_functions/messagesender)"]},{"fqdn":"references.kit_functions.messageobject.text","kind":"prop","title":"text","description":"","types":["string"]}]},{"fqdn":"references.kit_functions.messagesender","kind":"interface","title":"MessageSender","description":"","children":[{"fqdn":"references.kit_functions.messagesender.is_bot","kind":"prop","title":"is_bot","description":"","types":["boolean"]}]},{"fqdn":"references.kit_functions.queueinfo","kind":"interface","title":"QueueInfo","description":"","children":[{"fqdn":"references.kit_functions.queueinfo.queue_id","kind":"prop","title":"queue_id","description":"","types":["number"]},{"fqdn":"references.kit_functions.queueinfo.queue_name","kind":"prop","title":"queue_name","description":"","types":["string"]}]},{"fqdn":"references.kit_functions.skillobject","kind":"interface","title":"SkillObject","description":"","children":[{"fqdn":"references.kit_functions.skillobject.level","kind":"prop","title":"level","description":"","types":["number"]},{"fqdn":"references.kit_functions.skillobject.skill_name","kind":"prop","title":"skill_name","description":"","types":["string"]}]},{"fqdn":"references.kit_functions.channeltype","kind":"typedef","title":"ChannelType","description":"","types":["telegram","whatsapp-edna","viber","sms","facebook","vk","odnoklassniki","custom","webchat"]},{"fqdn":"references.kit_functions.databasetype","kind":"typedef","title":"DataBaseType","description":"","types":["function","global","conversation"]},{"fqdn":"references.kit_functions.dbresponse","kind":"typedef","title":"DbResponse","description":"","types":["{result: string}"]},{"fqdn":"references.kit_functions.objecttype","kind":"typedef","title":"ObjectType","description":"","types":["{[key: string]: string}"]}]